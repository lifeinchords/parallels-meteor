# For the app to run successfully, you'll need  the `GRAPHENEDB_URL` set. 
# Point to either your local neo4j install or an external service, like Graphene.
# In this example, `neo4j` is the username, and `tgh4536` is the password
# replace with your credentials.
# full url should be wrapped in double quotes
GRAPHENEDB_URL="http://neo4j:tgh4536@localhost:7474"


# Used when running the `$npm run resetdb` task, to clear the neo4j database. 
# To set this variable correctly, find your neo4j path by running `sudo find / -name graph.db`
# wrap in double quotes
NEO4J_DB_PATH="/usr/local/Cellar/neo4j/2.2.1/libexec/data/graph.db‚Äù


# where to store images: either locally, using `fileSystemUploader` value, 
# or on Amazon S3 instance using `s3Uploader` value.
# Defaults to fileSystemUploader. `s3Uploader` requires other AWS env variables: 
PARALLELS_FILE_UPLOADER="fileSystemUploader"


# determines if sound in the UI is played. 
IS_AUDIO_ENABLED=true


# should Meteor's default watcher automatically trigger Meteor to rebuild the files
# default is true. On slower dev machines, this might make sense to disable
# as every file change retriggers a build, which makes refactoring slow
# note, even if this is set to false, node process will still compile+build templates
# this cannot be prevented, but at least localhost will not automatically refresh
# which should save resources if needed
IS_METEOR_HOT_CODE_PUSH_ENABLED=false


# whether to display Meteor's build time performance numbers in terminal, when starting Meteor server
# This is useful for debugging why build times take longer, if there is a package
# or step in the build process that is taking a disproportionate time to build
# Defaults is 0, for disabled
METEOR_PROFILE=0


# If you are using Kadira tools, set these variables 
# more info: https://kadira.io/academy/getting-started-with-kadira/#auto-connect
KADIRA_APP_ID=2all4kj2k1bj34b2b
KADIRA_APP_SECRET=alkflkaslkgl-amsmsam-massak-2mm2m2m2
KADIRA_PROFILE_LOCALLY=1
